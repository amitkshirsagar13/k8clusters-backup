openapi: 3.0.0
info:
  title: QA API
  description: API description in QA.
  version: 1.0.0
servers:
  - url: http://localhost:8082/vi
    description: local server

paths:
  /qaList/{qaCount}:
    get:
      operationId: getQaList
      security:
        - ApiKeyAuth: []
      summary: Lists the Question/Answers
      tags:
        - QaController
      parameters:
          - $ref: '#/components/parameters/qaCount'
      responses:
        200:
          $ref: '#/components/responses/successQA'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

  parameters:
    qaCount:
      in: path
      name: qaCount
      required: true
      description: Number of Questions to be returned
      schema:
        type: integer
        example: 3
        default: 10

  responses:
    successQA:
      description: Get ID success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QA'
    ImageResponse:     # Can be referenced as '#/components/responses/ImageResponse'
      description: An image.
      content:
        image/*:
          schema:
            type: string
            format: binary
    GenericError:      # Can be referenced as '#/components/responses/GenericError'
      description: An error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    404:
      description: The specified resource was not found.
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'

  schemas:
    ErrorMessage:
      type: object
      properties:
        error:
          type: string
        exception:
          type: string

    Base:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: 2c9a07616cccd629016cccd66c370002
            creationDate:
              type: integer
            lastModifiedDate:
              type: integer
            owner:
              type: string
            ownerOrganization:
              type: string
    Choice:
      type: object
      properties:
        index:
          type: integer
          example: 1
        value:
          type: string
          example: Not Sure
        visible:
          type: boolean
          example: true
          default: true
        disabled:
          type: boolean
          example: true
          default: false
        correct:
          type: boolean
          example: false
          default: false
        hint:
          type: string
          example: How Do I Know?
        hintVisible:
          type: boolean
          example: true
          default: false
        checked:
          type: boolean
          example: true
          default: false
      required:
        - index
        - value

    QuestionType:
      type: string
      enum:
        - textType
        - boolType
        - multType
      default: multType

    QA:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - addressLine
            - country
            - companyName
          properties:
            question:
              type: string
              example: Who Are you?
            choices:
              type: array
              items:
                $ref: '#/components/schemas/Choice'
            revealed:
              type: boolean
              example: false
              default: false
            maxSelection:
              type: integer
              example: 2
            selectionCounter:
              type: integer
              example: 1
              default: 0
            point:
              type: integer
              example: 1
              default: 0
            submitted:
              type: boolean
              example: true
              default: false
            validated:
              type: boolean
              example: false
              default: false
            qType:
              $ref: '#/components/schemas/QuestionType'

